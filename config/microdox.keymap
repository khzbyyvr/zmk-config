/* 
 *Copyright (c) 2020 The ZMK Contributors
 *SPDX-License-Identifier: MIT
*/



#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms      = <50>;
            key-positions   = <11 12>;
            bindings        = <&kp ESC>;
        };

        combo_ret {
            timeout-ms      = <50>;
            key-positions   = <17 18>;
            bindings        = <&kp RET>;
        };


        combo_tab {
            timeout-ms      = <50>;
            key-positions   = <10 11>;
            bindings        = <&kp TAB>;
        };


        combo_bspc {
            timeout-ms      = <50>;
            key-positions   = <18 19>;
            bindings        = <&kp BSPC>;
        };


        combo_num {
            timeout-ms      = <50>;
            key-positions   = <12 13>;
            bindings        = <&mo 3>;
        };

        combo_num2 {
            timeout-ms      = <50>;
            key-positions   = <11 13>;
            bindings        = <&mo 4>;
        };

        combo_num3 {
            timeout-ms      = <50>;
            key-positions   = <10 13>;
            bindings        = <&mo 5>;
        };

        combo_sym {
            timeout-ms      = <50>;
            key-positions   = <16 17>;
            bindings        = <&mo 2>;
        };

    };
};





/ {
    keymap {
        compatible = "zmk,keymap";



        default_layer {

        // -----------------------------------------------------------------------------------------
        // |  Q  |  W  |  E  |  R  |  T   |   |  Y  |  U   |  I    |  O  |  P  |
        // |  A  |  S  |  D  |  F  |  G   |   |  H  |  J   |  K    |  L  |  ;  |
        // |  Z  |  X  |  C  |  V  |  B   |   |  N  |  M   |  ,    |  .  |  /  |
        //             | GUI | NAV | SHFT |   | SPC | SYM  | RCTRL |
        // -----------------------------------------------------------------------------------------


        bindings = <
            &kp Q &kp W    &kp E &kp R              &kp T     &kp Y &kp U  &kp I     &kp O   &kp P
            &kp A &kp S    &kp D &kp F              &kp G     &kp H &kp J  &kp K     &kp L   &kp SEMI
            &kp Z &kp X    &kp C &kp V              &kp B     &kp N &kp M  &kp COMMA &kp DOT &kp FSLH
                  &kp LGUI &mo 1 &kp LSHFT          &kp SPACE &mo 2 &kp RCTRL
        >;
        };






        nav_layer {
        // -----------------------------------------------------------------------------------------
        // |BTCLR|     | ESC |  ~   |     |   | TAB | HOME |  UP  | END | DEL  |
        // | BT1 | GUI | ALT | CTRL | NUM |   |  /  | LEFT | DOWN | RGT | BKSP |
        // | BT2 |     |     |      |     |   |  \  | ENT  |      |     |      |
        //             |     |      |     |   |     |      |      |
        // -----------------------------------------------------------------------------------------

        bindings = <
            &bt BT_CLR   &trans      &trans   &kp TILDE &trans     &kp TAB  &kp HOME &kp UP   &kp END   &kp DEL
            &bt BT_SEL 0 &kp K_CMENU &kp RALT &kp LCTRL &mo 3      &kp FSLH &kp LEFT &kp DOWN &kp RIGHT &kp BSPC
            &bt BT_SEL 1 &trans      &trans   &trans    &trans     &kp BSLH &trans   &trans   &trans    &trans
                                     &trans   &trans    &trans     &trans   &trans   &trans
        >;
                    };




        sym_layer {
        // -----------------------------------------------------------------------------------------
        // |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
        // |     |     |     |     | NUM |   |  -  |  =  |  {  |  }  | "|" |
        // |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |
        //             | GUI | NUM | SPC |   | ENT |     | ALT |
        // -----------------------------------------------------------------------------------------


        bindings = <
            &kp LC(LA(DEL))    &kp PIPE  &kp LPAR       &kp RPAR        &kp DQT            &trans    &trans    &trans    &trans   &trans 
            &kp LS(MINUS)      &trans    &kp LBKT       &kp RBKT        &kp SQT            &trans    &trans    &trans    &trans   &trans 
            &kp MINUS          &trans    &kp LS(LBKT)   &kp LS(RBKT)    &kp GRAVE          &trans    &trans    &trans    &trans   &trans 
                                         &kp LGUI       &trans          &kp SPACE          &kp RET   &trans    &kp RALT
        >;
                    };


        num_layer {

        // -----------------------------------------------------------------------------------------
        // |     |     |     |     |     |   |  A  |  1  |  2  |  3  |  D  |
        // |     |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
        // |     |     |     |     |     |   |  C  |  7  |  8  |  9  |  F  |
        //             |     |     |     |   |  0  |  .  |     |

        bindings = <
            &trans &kp LG(N1)  &kp LG(N2) &kp LG(N3) &trans         &kp LS(EQUAL)    &kp N1  &kp N2 &kp N3 &kp MINUS 
            &trans &kp LG(N4)  &kp LG(N5) &kp LG(N6) &trans         &kp B            &kp N4  &kp N5 &kp N6 &kp EQUAL 
            &trans &kp LG(N7)  &kp LG(N8) &kp LG(N9) &trans         &kp KP_MULTIPLY  &kp N7  &kp N8 &kp N9 &kp BSLH
                               &trans     &trans     &trans         &kp N0           &kp DOT &trans
        >;
        };


        num_layer2 {

        // -----------------------------------------------------------------------------------------
        // |     |     |     |     |     |    |  A  |  !  |  @  |  #  |  D  |
        // |     |     |     |     |     |    |  B  |  $  |  %  |  ^  |  E  |
        // |     |     |     |     |     |    |  C  |  &  |  *  |     |  F  |
        //             |     |     |     |    |  0  |  .  |     |
        bindings = <
            &trans &kp LG(N1)  &kp LG(N2) &kp LG(N3) &trans         &kp A           &kp EXCL    &kp AT          &kp HASH  &kp D
            &trans &kp LG(N4)  &kp LG(N5) &kp LG(N6) &trans         &kp B           &kp DLLR    &kp PRCNT       &kp CARET &kp E
            &trans &kp LG(N7)  &kp LG(N8) &kp LG(N9) &trans         &kp C           &kp AMPS    &kp KP_MULTIPLY &trans    &kp F
                               &trans     &trans     &trans         &kp LS(MINUS)   &kp MINUS   &trans
        >;
        };

        num_layer3 {

        // -----------------------------------------------------------------------------------------
        // |     |     |     |     |     |   |  A  |  1  |  2  |  3  |  D  |
        // |     |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
        // |     |     |     |     |     |   |  C  |  7  |  8  |  9  |  F  |
        //             |     |     |     |   |  0  |  .  |     |
        bindings = <
            &trans &kp LG(N1)  &kp LG(N2) &kp LG(N3) &trans         &kp LS(EQUAL)    &kp F1  &kp F2 &kp F3 &kp MINUS 
            &trans &kp LG(N4)  &kp LG(N5) &kp LG(N6) &trans         &kp B            &kp F4  &kp F5 &kp F6 &kp EQUAL 
            &trans &kp LG(N7)  &kp LG(N8) &kp LG(N9) &trans         &kp KP_MULTIPLY  &kp F7  &kp F8 &kp F9 &kp BSLH
                               &trans     &trans     &trans         &kp N0           &kp DOT &trans
        >;
        };

    };
};
